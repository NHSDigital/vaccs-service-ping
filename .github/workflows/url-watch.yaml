name: URL Watch

on:
  schedule:
    - cron: "*/10 * * * *"   # every 10 minutes
  workflow_dispatch:

jobs:
  check-urls:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check URLs (Workflow Builder friendly)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          CURL_TIMEOUT_SECS: "12"
        run: |
          set -euo pipefail

          if [ ! -f urls.txt ]; then
            echo "urls.txt not found. Create it with lines like: Name | https://example.com"
            exit 1
          fi

          trim() { awk '{$1=$1;print}'; }

          FAIL_COUNT=0
          TOTAL=0
          while IFS= read -r LINE || [ -n "$LINE" ]; do
            [[ -z "$LINE" || "$LINE" =~ ^[[:space:]]*# ]] && continue
            [[ "$LINE" != *"|"* ]] && { echo "WARN: skipping line without '|': $LINE"; continue; }

            NAME_RAW=${LINE%%|*}
            URL_RAW=${LINE#*|}
            NAME=$(printf "%s" "$NAME_RAW" | trim)
            URL=$(printf "%s" "$URL_RAW" | trim)
            [[ -z "$NAME" || -z "$URL" ]] && { echo "WARN: malformed line: $LINE"; continue; }

            TOTAL=$((TOTAL+1))

            CURL_ERR=""
            HTTP_CODE=$(curl -sS -L -m "${CURL_TIMEOUT_SECS}" -o /dev/null -w "%{http_code}" "$URL") || CURL_ERR=$?

            if [ -n "$CURL_ERR" ]; then
              TEXT=":rotating_light: URL Watch — ${NAME} unreachable (curl exit ${CURL_ERR}) — <${URL}>"
              jq -n --arg text "$TEXT" '{text:$text}' \
                | curl -sS -X POST -H 'Content-type: application/json' -d @- "$SLACK_WEBHOOK_URL" > /dev/null
              FAIL_COUNT=$((FAIL_COUNT+1))
              # optional: avoid burst posting
              sleep 0.5
              continue
            fi

            case "$HTTP_CODE" in
              2*|3*) : ;;   # OK
              *)
                TEXT=":rotating_light: URL Watch — ${NAME} HTTP ${HTTP_CODE} — <${URL}>"
                jq -n --arg text "$TEXT" '{text:$text}' \
                  | curl -sS -X POST -H 'Content-type: application/json' -d @- "$SLACK_WEBHOOK_URL" > /dev/null
                FAIL_COUNT=$((FAIL_COUNT+1))
                sleep 0.5
                ;;
            esac
          done < urls.txt

          if [ "$FAIL_COUNT" -eq 0 ]; then
            echo "All OK across ${TOTAL} checks (no Slack post)."
          else
            echo "Posted ${FAIL_COUNT} failure message(s) to Slack."
          fi